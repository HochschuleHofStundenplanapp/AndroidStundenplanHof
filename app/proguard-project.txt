# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific remove options here:
-assumenosideeffects class junit.framework.Assert { *; }
###-assumenosideeffects class android.util.Log { *; }
-assumenosideeffects class android.util.Log {
    public static boolean isLoggable(java.lang.String, int);
    public static int v(...);
    public static int i(...);
    public static int w(...);
    public static int d(...);
    public static int e(...);
}

# Add any project specific keep options here:

# For Serializable Objects
# https://www.guardsquare.com/en/proguard/manual/examples#serializable
# this is needed for Update of the Play Store
-keepnames class * implements java.io.Serializable
-keepclassmembers class * implements java.io.Serializable { *; }

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
-keepclassmembers class fqcn.of.javascript.interface.for.webview {
   public *;
}


# do not warn on Picasso, async loading image library
-dontwarn com.squareup.okhttp.**
# do not warn on this stupid fucking library of open source developers
#-dontwarn org.apache.http.**


#dontwarn for OSMDROID Android O requestRouteToHost() unresolved reference error
-dontwarn org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck

#bottombar f√ºr Hike
-dontwarn com.roughike.bottombar.**
#file picker for import of files
-keep class com.aditya.filebrowser
-keep class android.support.v7.widget.SearchView { *; }


# not needed
#-keepattributes SourceFile,LineNumberTable
#-keep class com.parse.*{ *; }

# Smack specific configuration
# If you use ProGuard, you have to configure it so that no important
# Smack classes are optimized away:
#
#-keep class org.jivesoftware.smack.** { *; }
#-keep class org.jivesoftware.smackx.** { *; }
-keep class org.jivesoftware.smack.XMPPConnection
-keep class org.jivesoftware.smack.XMPPException
-keep class org.jivesoftware.smack.packet.Message
-keep class org.jivesoftware.smack.packet.Message.Type

# Smack specific configuration
-keep class de.measite.smack.AndroidDebugger { *; }
-keep class * implements org.jivesoftware.smack.initializer.SmackInitializer
-keep class * extends org.jivesoftware.smack.provider.IQProvider
-keep class * extends org.jivesoftware.smack.provider.PacketExtensionProvider
-keep class * extends org.jivesoftware.smack.packet.Packet

-keep class org.jivesoftware.smack.** { *; }
-keep class org.jivesoftware.smackx.** { *; }

# need for Smack to work in release Version
# (https://stackoverflow.com/questions/31157616/smack-for-android-fails-when-using-proguard)
-keepattributes Signature


# Smack uses org.apache... and that introduced a new logging, which makes mess
-keep class org.apache.log.** { *; }
-dontwarn org.apache.log.**
-keep class org.apache.commons.logging.** { *; }
-dontwarn org.apache.commons.logging.**
-keep class org.apache.log4j.** { *; }
-dontwarn org.apache.log4j.**
-keep class org.apache.avalon.** { *; }
-dontwarn org.apache.avalon.**
-keep class javax.servlet.** { *; }
-dontwarn javax.servlet.**

-keepclasseswithmembers class * extends org.jivesoftware.smack.sasl.SASLMechanism {
    public <init>(org.jivesoftware.smack.SASLAuthentication);
}

#

#### Firebase
-dontwarn com.google.android.gms.**
-keep class com.google.android.gms.** { *; }
-keep class com.google.firebase.** { *; }


#-libraryjars /libs/Parse-1.5.1.jar
#-libraryjars /libs/crashlytics.jar
#-libraryjars /libs/picasso-2.3.2.jar
#-dontwarn com.parse.**
#-dontwarn com.squareup.picasso.**
#-keepclasseswithmembernames class * {
#    native <methods>;
#}

#-dontshrink
#-dontoptimize
#-dontusemixedcaseclassnames
#-dontskipnonpubliclibraryclasses
#-dontpreverify
-verbose
-optimizationpasses 4
-allowaccessmodification
