/*
 * Copyright (c) 2016-2018 Lars Gaidzik & Lukas Mahr & Hochschule Hof
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
	compileSdk 33
	
	/**
	 * compileSdkVersion specifies the Android API level Gradle should use to
	 * compile your app. This means your app can use the API features included in
	 * this API level and lower.
	 */
	
	/**
	 * buildToolsVersion specifies the version of the SDK build tools, command-line
	 * utilities, and compiler that Gradle should use to build your app. You need to
	 * download the build tools using the SDK Manager.
	 *
	 * This property is optional because the plugin uses a recommended version of
	 * the build tools by default.
	 */
	buildToolsVersion '33.0.0'
	
	compileOptions {
		// Error: Invoke-customs are only supported starting with Android O (--min-api 26)
		// solution: Java 8
		// Attention: desktop adds '' arround the string. Remove them
		sourceCompatibility 1.8
		targetCompatibility 1.8
	}
	
	
	/**
	 * The defaultConfig block encapsulates default settings and entries for all
	 * build variants, and can override some attributes in main/AndroidManifest.xml
	 * dynamically from the build system. You can configure product flavors to override
	 * these values for different versions of your app.
	 */
	defaultConfig {
		applicationId 'de.hof.university.app'
		targetSdk 33
		minSdk 21
		
		versionCode 39
		versionName '5.0'

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		multiDexEnabled = true
	}
	
	// nötig ab AS 3 damit Flavors gehen
	/**
	 * The productFlavors block is where you can configure multiple product flavors.
	 * This allows you to create different versions of your app that can
	 * override the defaultConfig block with their own settings. Product flavors
	 * are optional, and the build system does not create them by default.
	 *
	 * This example creates a free and paid product flavor. Each product flavor
	 * then specifies its own application ID, so that they can exist on the Google
	 * Play Store, or an Android device, simultaneously.
	 *
	 * If you declare product flavors, you must also declare flavor dimensions
	 * and assign each flavor to a flavor dimension.
	 */
	flavorDimensions "useCase"
	productFlavors {
		
		/**
		 * applicationId uniquely identifies the package for publishing.
		 * However, your source code should still reference the package name
		 * defined by the package attribute in the main/AndroidManifest.xml file.
		 */
		StundenplanHofApp {
			buildConfigField "boolean", "ALLOW_INVALID_CERTIFICATE", "true"
			dimension "useCase"
		}
	}

	signingConfigs {
		release {
			//Folgender Pfad führt zum Absturz des Gradle Wrappers auf manchen Systemen (wie meinen Mac)!
			//storeFile file('D:/Projekt/Mobile.AndroidStudio/Hof.Stundenplaner/fhhKey.jks')
			keyAlias "fhhkey"
			//keyPassword 'IUwbayNG54S5C4udGkjs'
			keyPassword 'IUwbayNG54S5C4udGkjs'
			//storePassword 'IUwbayNG54S5C4udGkjs'
			storePassword 'IUwbayNG54S5C4udGkjs'
			//storeFile file('D:/Projekt/Mobile.AndroidStudio/Hof.Stundenplaner/fhhKey.jks')
			storeFile file('D:/Projekt/Mobile.AndroidStudio/Hof.Stundenplaner/fhhKey.jks')
		}
		debug {
			// Ein fester debug keystore damit, wenn man mit verschiedenen Rechnern arbeitet, die APK updaten kann.
			// Der dubug.keystore liegt im Projekt unter /app/debug.keystore und kann auch ausgetauscht werden.
			storeFile file('debug.keystore')
			storePassword 'android'
		}
	}
	
	/**
	 * The buildTypes block is where you can configure multiple build types.
	 * By default, the build system defines two build types: debug and release. The
	 * debug build type is not explicitly shown in the default build configuration,
	 * but it includes debugging tools and is signed with the debug key. The release
	 * build type applies Proguard settings and is not signed by default.
	 */
	buildTypes {
		/**
		 * By default, Android Studio configures the release build type to enable code
		 * shrinking, using minifyEnabled, and specifies the Proguard settings file.
		 */
		release {
			// Enables code shrinking, obfuscation, and optimization for only
			// your project's release build type.
			minifyEnabled true
			// Enables resource shrinking, which is performed by the
			// Android Gradle plugin.
			shrinkResources true

			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
			pseudoLocalesEnabled false
			/* proguardFile 'D:/Projekt/Mobile.AndroidStudio/VideoChat/app/proguard-project.txt' */
			proguardFile 'proguard-project.txt'
			debuggable false
			jniDebuggable false
			//schöneren APK Namen
			archivesBaseName = 'Hochschule_Hof_Stundenplan_App'
			multiDexEnabled true
		}
		debug {
			debuggable true
			//schöneren APK Namen
			archivesBaseName = 'Hochschule_Hof_Stundenplan_App'
			// damit wir die debug Version parallel zu der release Version installieren können
			applicationIdSuffix = ".debug"
			versionNameSuffix "-dev"
			multiDexEnabled true
		}
	}
	packagingOptions {
		resources {
			excludes += ['META-INF/DEPENDENCIES', 'LICENCE.txt', 'junit/runner/smalllogo.gif', 'junit/runner/logo.gif', 'LICENSE-junit.txt', 'okhttp3/internal/publicsuffix/publicsuffixes.gz']
		}
	}
	
	// Lint found fatal errors while assembling a release target
	
	lint {
		abortOnError false
	}
	namespace 'de.hof.university.app'
	
	// Kotlin
	//buildFeatures {
	//	viewBinding = true
	//}
	
}

/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 * To learn more, go to Add build dependencies.
 */
//NOTICE: Die Versionsnummer sollte pro Block gleich sein
dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	// Die Versionsnummer sollte die gleiche sein
	implementation 'com.google.android.material:material:1.7.0'
	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'androidx.core:core:1.9.0'
	implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
	implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
	implementation 'androidx.media:media:1.6.0'
	implementation 'androidx.fragment:fragment:1.5.4'
	
	implementation 'androidx.appcompat:appcompat:1.5.1'
	implementation 'androidx.gridlayout:gridlayout:1.0.0'
	implementation 'androidx.recyclerview:recyclerview:1.2.1'
	implementation 'androidx.preference:preference:1.2.0'

	implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
	
	implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
	//if using constraint-layout above 2.+ the minSdkVersion must be 18
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	
////	implementation "commons-logging:commons-logging-api:1.1"
	
	//smack
	implementation 'org.igniterealtime.smack:smack-java8:4.4.3'
	implementation 'org.igniterealtime.smack:smack-android-extensions:4.4.3'
	implementation 'org.igniterealtime.smack:smack-tcp:4.4.3'
	implementation 'org.igniterealtime.smack:smack-extensions:4.4.3'
	implementation 'org.igniterealtime.smack:smack-im:4.4.3'
	implementation 'org.igniterealtime.smack:smack-bosh:4.4.3'


	// jsoup HTML parser library @ http://jsoup.org/
	implementation 'org.jsoup:jsoup:1.15.3'
	// Die Versionsnummer sollte die gleiche sein
	implementation 'com.google.android.gms:play-services-gcm:17.0.0'
	implementation 'com.google.android.gms:play-services-auth:20.3.0'
	implementation 'com.google.android.gms:play-services-drive:17.0.0'
	
	implementation 'com.google.firebase:firebase-messaging:23.1.0'
	implementation 'org.osmdroid:osmdroid-android:6.1.14'
	implementation 'junit:junit:4.13.2'

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


configurations.all {
	// instead of adding all the excludes per module, and MS did no longer figure out this XML Parser stuff,
	// we can exclude this Android mess from here for all configurations
	//disadvantage: Source Code compatibility muss auf Java 8 / 1.8 angehoben werden.
	//
	// https://github.com/x-stream/xstream/issues/117
	// Duplicate classes in xpp3_min and xmlpull #117
	
	//Duplicate class org.xmlpull.mxp1.MXParser found in modules xpp3-1.1.4c.jar (xpp3:xpp3:1.1.4c) and xpp3_min-1.1.4c.jar (xpp3:xpp3_min:1.1.4c)
	//Duplicate class org.xmlpull.v1.XmlPullParserFactory found in modules kxml2-2.3.0.jar (net.sf.kxml:kxml2:2.3.0) and xpp3-1.1.4c.jar (xpp3:xpp3:1.1.4c)
	//Duplicate class org.xmlpull.v1.XmlSerializer found in modules kxml2-2.3.0.jar (net.sf.kxml:kxml2:2.3.0) and xpp3-1.1.4c.jar (xpp3:xpp3:1.1.4c)
	exclude group: 'net.sf.kxml', module: 'kxml2'
	// exclude all from xpp3. Not only xpp3 or xpp3_min. '' is a wildcard
	exclude group: 'xpp3', module: ''
	
	
	exclude group: 'com.android.support', module: ''
	
	// Compile SDK 33
	exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
}
